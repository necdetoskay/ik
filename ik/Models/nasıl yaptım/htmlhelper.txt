@model BikeWeb.ViewModels.BikeViewModel

<div class="pull-left upload-img-wrapper">
	<label class="upload-img" data-content="Change Image">
		<img class="img-responsive" height="250" src="@Model.ImageSource" width="250"></img>
	</label>
	<input id="ImageName" name="ImageName" style="display:none;" type="file" value="58.jpg" />
</div>


namespace BikeWeb.Extensions
{
 public static class HtmlHelperExtensions
 {
   public static IHtmlString ImageUpload(this HtmlHelper<BikeViewModel> htmlHelper, BikeViewModel viewModel)
   {
     var outerDiv = new TagBuilder("div");
     outerDiv.AddCssClass("pull-left upload-img-wrapper");
     var label = new TagBuilder("label");
     label.AddCssClass("upload-img");
     label.MergeAttribute("data-content", viewModel.ButtonText);

     var image = new TagBuilder("img");
     image.AddCssClass("img-responsive");
     image.MergeAttribute("src", viewModel.imageSource);
     image.MergeAttribute("width", "250");
     image.MergeAttribute("height", "250");

     var textbox = InputExtensions.TextBoxFor(htmlHelper, m => m.ImageName, new { type = "file", style = "display:none" });

     StringBuilder htmlBuilder = new StringBuilder();
     htmlBuilder.Append(label.ToString(TagRenderMode.StartTag));
     htmlBuilder.Append(image.ToString(TagRenderMode.Normal));
     htmlBuilder.Append(label.ToString(TagRenderMode.EndTag));
     htmlBuilder.Append(textbox.ToHtmlString());
     outerDiv.InnerHtml = htmlBuilder.ToString();
     var html = outerDiv.ToString(TagRenderMode.Normal);

     return MvcHtmlString.Create(html);
   }
 }
}