@model ik.Models.Personel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Personel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="col-md-12">
            <ul class="nav nav-tabs">
                <li class="active"><a data-toggle="tab" href="#ozluk">Özlük Bilgileri</a></li>
                <li><a data-toggle="tab" href="#egitim">Eğitim Durumu</a></li>
                @*<li><a data-toggle="tab" href="#giriscikis">Ay Giriş Çıkış</a></li>
                    <li><a data-toggle="tab" href="#izinrapor">Son İzinler/ Raporlar</a></li>*@
            </ul>
        </div>
        <div class="col-md-12">
            <div class="tab-content">
                <div id="ozluk" class="tab-pane fade active in">
                    <div class="form-group">
                        @Html.LabelFor(model => model.adsoyad, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.adsoyad, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.adsoyad, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.birimid, "birimid", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("birimid", (SelectList)ViewBag.birimListe, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.birimid, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.sicilno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.sicilno, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.sicilno, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.tcno, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.tcno, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.tcno, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.pdksid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("pdksid", (SelectList)ViewBag.pdksListe, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.pdksid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.giristarihi, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.giristarihi, new { htmlAttributes = new { @class = "form-control datetime" } })
                            @Html.ValidationMessageFor(model => model.giristarihi, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.mikroid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("mikroid", (SelectList)ViewBag.mikroListe, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.mikroid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.dogumtarihi, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.dogumtarihi, new { htmlAttributes = new { @class = "form-control datetime" } })
                            @Html.ValidationMessageFor(model => model.dogumtarihi, "", new { @class = "text-danger" })
                        </div>
                    </div>




                    <div class="form-group">
                        @Html.LabelFor(model => model.iban, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.iban, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.iban, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div id="egitim" class="tab-pane fade">
                    <div class="form-group">
                        @Html.LabelFor(model => model.puantaj, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.puantaj, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.puantaj, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PersonelDetay.lokasyon, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("lokasyon", (SelectList)ViewBag.lokasyonListe, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PersonelDetay.lokasyon, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PersonelDetay.cinsiyeti, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("cinsiyeti", (IEnumerable<SelectListItem>)ViewBag.cinsiyetListe, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PersonelDetay.cinsiyeti, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>


    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>
    <script type="text/javascript">
        $(function () {
            jQuery.validator.methods.date = function (value, element) {
                var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                if (isChrome) {
                    var d = new Date();
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                } else {
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            };

            $('.datetime').datetimepicker({
                locale: 'tr',
                format: 'L'
            });
        })
    </script>
}
