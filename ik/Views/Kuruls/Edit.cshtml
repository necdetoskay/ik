@model ik.Models.Kurul

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Kurul</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.adsoyad, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.adsoyad, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.adsoyad, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.tc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tc, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="form-group">
            @Html.Label("kurultip", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select class="form-control" id="kurultip"></select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.gorevtip, "gorevtip", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("gorevtip", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.gorevtip, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.giristarih, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.giristarih, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.giristarih, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script src="~/Scripts/bootstrap-dialog.js"></script>
    <script src="~/Scripts/editableselectlist.js"></script>
    <script type="text/javascript">
        $(function () {
            $('#kurultip').MakeEditable({
                fill: {
                    url: '@Url.Action("_KurulTipListe")',
                    selected:'@ViewBag.kurultip'
                }, add: {//yeni ekleme butonu parametreleri
                    url: '@Url.Action("_KurulTipEkle")',//yeni kaydı database e ekleme url si
                    data_id: -1,
                    label: 'Ekle',//buton üzerinde yazan yazı
                    title: 'Kurul Tipi' //dialog title
                }
            });

            $('#gorevtip').MakeEditable({
                cascade: {
                    url: '@Url.Action("_GorevTipYukle")',
                    sourceid: 'kurultip'
                }, add: {//yeni ekleme butonu parametreleri
                    url: '@Url.Action("_GorevTipEkle")',//yeni kaydı database e ekleme url si
                    data_id: -1,
                    label: 'Görev Ekle',//buton üzerinde yazan yazı
                    title: 'Görev Tipi' //dialog title
                }

            });
        })
    </script>
}