@model ik.Models.Izin

@{
    ViewBag.Title = "Create";
}

<style>
    .editor-datetime { position: relative; }
</style>
<h2>Create</h2>
<div  class="row">
<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-6">
            <h4>Izin</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(model => model.personelid, "personelid", new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("personelid", (SelectList) ViewBag.personelListe, "Personel Seçiniz", new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.personelid, "", new {@class = "text-danger"})
                    <input id="mikroizin" type="button" value="Mikro İzin Sorgula"/>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.izintip, "izintip", new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.DropDownList("izintip", (SelectList) ViewBag.izintipListe, new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.izintip, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.yil, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.yil, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.yil, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.baslangictarih, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.baslangictarih, new {htmlAttributes = new {@class = "form-control datetime"}})
                    @Html.ValidationMessageFor(model => model.baslangictarih, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bitistarihi, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bitistarihi, new {htmlAttributes = new {@class = "form-control datetime"}})
                    @Html.ValidationMessageFor(model => model.bitistarihi, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.gun, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.gun, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.gun, "", new {@class = "text-danger"})
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.aciklama, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.aciklama, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.aciklama, "", new {@class = "text-danger"})
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </div>
        </div>
    }
</div>
    <div>
        <table style="width: auto;" class="table  table-striped  table-condensed">
            <thead><tr><td>Açıklama</td><td>Başlangıç Tarihi</td><td>Bitiş Tarihi</td></tr></thead>
            <tbody id="mikroizinliste"></tbody>
        </table>
        asdasdad
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <link href="~/Content/bootstrap.css" rel="stylesheet"/>
    <link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet"/>
    <script src="~/Scripts/moment-with-locales.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>

    <script type="text/javascript">


        $(function () {

            jQuery.validator.methods.date = function(value, element) {
                var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                if (isChrome) {
                    var d = new Date();
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                } else {
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            };


            $('.datetime').datetimepicker({
                locale: 'tr',
                format: 'L'
            });

            function izinlistetemizle() {
                $('#mikroizinliste').html('');
            }

            $('#izintip').change(izinlistetemizle);
            $('#personelid').change(izinlistetemizle);


            $('#mikroizin').on('click', function() {
                var personelid = $('#personelid').val();
                var izintip = $('#izintip').val();
                if (personelid === '') return;
                if (izintip == 1) {
                    
                    $.ajax({
                        type: 'get',
                        url: '@Url.Action("PersonelMikroIzin")',
                        data: {
                            personelid:personelid
                        },
                        dataType: "json",
                        success:function(data) {
                            $.each(data, function (i, item) {
                                $('<tr>').html("<td>" + data[i].Aciklama + "</td><td>" + data[i].Baslangic.toDDMMYYY() + "</td><td>" + data[i].Bitis.toDDMMYYY() + "</td>").appendTo('#mikroizinliste');
                            });
                        },
                        error: function (xhr, ajaxOptions, thrownError) {
                            alert(xhr.status);
                            alert(thrownError);
                            alert(xhr.responseText);
                        }
                    });
                }
            });
        })
    </script>
}