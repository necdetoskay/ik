@model ik.Models.DataClasslari.DataPDKSMazeretEkleVM

@{
    ViewBag.Title = "_PersonelMazeretEkle";
}

<style>
    input.upper { text-transform: uppercase; }
</style>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
     
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model=>model.pdksID)
        <div class="form-group">
            @Html.LabelFor(model => model.tatilID, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EnumDropDownListFor(model => model.tatilID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.tatilID, "", new { @class = "text-danger" })
            </div>
        </div>
        
       

        <div class="form-group">
            @Html.LabelFor(model => model.baslangic, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.baslangic, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.baslangic, "", new { @class = "text-danger" })
            </div>
        </div>
        


        <div class="form-group">
            @Html.LabelFor(model => model.bitis, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.bitis, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bitis, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Saatlik, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Saatlik, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Saatlik, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group giriscikis hidden">
            @Html.LabelFor(model => model.CikisSaat, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CikisSaat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CikisSaat, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group giriscikis hidden">
            @Html.LabelFor(model => model.GirisSaat, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.GirisSaat, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GirisSaat, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.aciklama, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.aciklama, new { htmlAttributes = new { @class = "form-control upper " , @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.aciklama, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(function() {
        function saatlik(check) {
            if(check) {
                $('.giriscikis').removeClass("hidden");

            }else {
                $('.giriscikis').addClass("hidden");
            }

        }

        $('#Saatlik').on('change', function() {
            var check = $(this).prop("checked");
            saatlik(check);
        });

        
    });
</script>